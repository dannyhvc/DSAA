<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="util_8hpp" kind="file">
    <compoundname>util.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">chrono</includes>
    <includes local="no">iomanip</includes>
    <includedby refid="main_8cpp" local="no">C:/#GITHUB/Play-Ground2/compsci/testing_proj/main.cpp</includedby>
    <includedby refid="util_8cpp" local="yes">C:/#GITHUB/Play-Ground2/compsci/dist/util-mod/util.cpp</includedby>
    <incdepgraph>
      <node id="48">
        <label>iomanip</label>
      </node>
      <node id="41">
        <label>C:/#GITHUB/Play-Ground2/compsci/dist/util-mod/util.hpp</label>
        <link refid="util.hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>string</label>
      </node>
      <node id="45">
        <label>vector</label>
      </node>
      <node id="44">
        <label>utility</label>
      </node>
      <node id="43">
        <label>sstream</label>
      </node>
      <node id="47">
        <label>chrono</label>
      </node>
      <node id="46">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49">
        <label>C:/#GITHUB/Play-Ground2/compsci/dist/util-mod/util.hpp</label>
        <link refid="util.hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>C:/#GITHUB/Play-Ground2/compsci/testing_proj/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="51">
        <label>C:/#GITHUB/Play-Ground2/compsci/dist/util-mod/util.cpp</label>
        <link refid="util_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classutil_1_1csv" prot="public">util::csv</innerclass>
    <innerclass refid="classutil_1_1_run_timer" prot="public">util::RunTimer</innerclass>
    <innernamespace refid="namespaceutil">util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="16" refid="namespaceutil_1a6dddadf54219a5e7d7fcbf0afa8e53c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_1a6dddadf54219a5e7d7fcbf0afa8e53c5" kindref="member">split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/>Container&amp;<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delims)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ch<sp/>:<sp/>str)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>!=<sp/>delims)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>ch;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.push_back(ss.str());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str(std::string());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>if-else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss)<sp/>container.push_back(ss.str());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classutil_1_1csv" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classutil_1_1csv" kindref="compound">csv</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36" refid="classutil_1_1csv_1a81f5b083ffba0bbd776f1f834dee4f38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classutil_1_1csv_1a81f5b083ffba0bbd776f1f834dee4f38" kindref="member">fname_cs_</ref><sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="37" refid="classutil_1_1csv_1ae609fb2e100527cf563af7b97e2c3331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;std::vector&lt;std::vector&lt;std::string&gt;&gt;&gt;<sp/><ref refid="classutil_1_1csv_1ae609fb2e100527cf563af7b97e2c3331" kindref="member">solution_</ref>{<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classutil_1_1csv_1a7bbfe66c7dfb4b7b2f538d8cffc37289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1csv_1a7bbfe66c7dfb4b7b2f538d8cffc37289" kindref="member">csv</ref>(std::string<sp/>fn)<sp/>:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1csv_1a81f5b083ffba0bbd776f1f834dee4f38" kindref="member">fname_cs_</ref>(std::move(fn))<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1csv_1a2ef8657f1a018d6a8d6d864c35c61b03" kindref="member">~csv</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/><ref refid="classutil_1_1csv_1a0653480eb0eae9c4d28d568a78afdc8e" kindref="member">read_csv</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/><ref refid="classutil_1_1csv_1ae91d47a184d91977aa8bcce0d5cf06a6" kindref="member">parse</ref>(std::istream&amp;<sp/>bis);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classutil_1_1csv_1a9a1e8aa43aa2f2281d9976754c653216" kindref="member">str</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="classutil_1_1_run_timer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classutil_1_1_run_timer" kindref="compound">RunTimer</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="classutil_1_1_run_timer_1ab428cb6f0e4f01e4a5580affc49f4611" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1ab428cb6f0e4f01e4a5580affc49f4611" kindref="member">time_unit</ref><sp/>=<sp/>std::chrono::steady_clock::time_point;</highlight></codeline>
<codeline lineno="56" refid="classutil_1_1_run_timer_1a23af5aeeadc910d517cc767e3e9219d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1_run_timer_1ab428cb6f0e4f01e4a5580affc49f4611" kindref="member">time_unit</ref><sp/><ref refid="classutil_1_1_run_timer_1a23af5aeeadc910d517cc767e3e9219d1" kindref="member">start_time_point_</ref>;</highlight></codeline>
<codeline lineno="57" refid="classutil_1_1_run_timer_1a6e4c93791076eabf205198dc5c9ad686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1_run_timer_1ab428cb6f0e4f01e4a5580affc49f4611" kindref="member">time_unit</ref><sp/><ref refid="classutil_1_1_run_timer_1a6e4c93791076eabf205198dc5c9ad686" kindref="member">end_time_point_</ref>;</highlight></codeline>
<codeline lineno="58" refid="classutil_1_1_run_timer_1afdf2f1e7fa009b316045c2d6f815a810" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1afdf2f1e7fa009b316045c2d6f815a810" kindref="member">state_m_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="classutil_1_1_run_timer_1ac2037023b567579b4d8243e0c14129fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1ac2037023b567579b4d8243e0c14129fa" kindref="member">current_elapsed_</ref>;</highlight></codeline>
<codeline lineno="60" refid="classutil_1_1_run_timer_1a33a4254f3534c10f47a0ec0a8208c821" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a33a4254f3534c10f47a0ec0a8208c821" kindref="member">CONVERT_2MSECONDS</ref><sp/>=<sp/>1</highlight><highlight class="stringliteral">&apos;000&apos;</highlight><highlight class="normal">000;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//todo:<sp/>fix<sp/>the<sp/>restart<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1af28e288f32bbe198a6e2cad54f62c0de" kindref="member">RunTimer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1_run_timer_1ab3c2f11af315014b08cf2f8e68f79093" kindref="member">~RunTimer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>on<sp/>time<sp/>start<sp/>using<sp/>chrono::now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classutil_1_1_run_timer_1a15785614a8a10dc207167a116c757a43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a15785614a8a10dc207167a116c757a43" kindref="member">start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1a23af5aeeadc910d517cc767e3e9219d1" kindref="member">start_time_point_</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a23af5aeeadc910d517cc767e3e9219d1" kindref="member">start_time_point_</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>on<sp/>time<sp/>after<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classutil_1_1_run_timer_1a1799e5cd49103e64315d3eef3872bb6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a1799e5cd49103e64315d3eef3872bb6c" kindref="member">finish</ref>()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1a6e4c93791076eabf205198dc5c9ad686" kindref="member">end_time_point_</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a6e4c93791076eabf205198dc5c9ad686" kindref="member">end_time_point_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>return<sp/>time<sp/>elapsed<sp/>in<sp/>seconds</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classutil_1_1_run_timer_1accbf37b0b51e242a6fccca2d98063238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1accbf37b0b51e242a6fccca2d98063238" kindref="member">elapsed</ref>()<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1_run_timer_1a6e4c93791076eabf205198dc5c9ad686" kindref="member">end_time_point_</ref><sp/>-<sp/><ref refid="classutil_1_1_run_timer_1a23af5aeeadc910d517cc767e3e9219d1" kindref="member">start_time_point_</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1ac2037023b567579b4d8243e0c14129fa" kindref="member">current_elapsed_</ref><sp/>=<sp/>t1.count()<sp/>/<sp/><ref refid="classutil_1_1_run_timer_1a33a4254f3534c10f47a0ec0a8208c821" kindref="member">CONVERT_2MSECONDS</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1ac2037023b567579b4d8243e0c14129fa" kindref="member">current_elapsed_</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restart<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classutil_1_1_run_timer_1ace1566f23ba8e8489fd93f5f2c376857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1ace1566f23ba8e8489fd93f5f2c376857" kindref="member">restart</ref>()<sp/>{<sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1afdf2f1e7fa009b316045c2d6f815a810" kindref="member">state_m_</ref><sp/>?<sp/>this-&gt;<ref refid="classutil_1_1_run_timer_1afdf2f1e7fa009b316045c2d6f815a810" kindref="member">state_m_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/>this-&gt;state_m_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>logs<sp/>the<sp/>amount<sp/>of<sp/>time<sp/>a<sp/>specific<sp/>task<sp/>took<sp/>to<sp/>complete<sp/>in<sp/>milliseconds</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classutil_1_1_run_timer_1a234bc7869e9411e39623584b248b6ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classutil_1_1_run_timer_1a234bc7869e9411e39623584b248b6ba7" kindref="member">logging</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>std::setprecision(5)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/><ref refid="classutil_1_1_run_timer_1accbf37b0b51e242a6fccca2d98063238" kindref="member">elapsed</ref>()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;ms<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/#GITHUB/Play-Ground2/compsci/dist/util-mod/util.hpp"/>
  </compounddef>
</doxygen>
